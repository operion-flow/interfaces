name: Test and Coverage

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.24"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Format check
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted:"
            gofmt -s -l .
            exit 1
          fi

      - name: Vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          only-new-issues: true

      # - name: Run tests
      #   run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

      # - name: Generate coverage report
      #   run: go tool cover -html=coverage.out -o coverage.html

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v5
      #   with:
      #     file: ./coverage.out
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     slug: operion-flow/interfaces

      # - name: Upload coverage to Coveralls
      #   uses: coverallsapp/github-action@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     path-to-lcov: coverage.out

      # - name: Archive coverage reports
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: coverage-report
      #     path: |
      #       coverage.out
      #       coverage.html
